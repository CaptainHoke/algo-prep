package main

import (
	"fmt"
	"math"
)

// LC Daily
// 279. Perfect Squares

// Given an integer n, return the least number of perfect square numbers that sum to n.
// A perfect square is an integer that is the square of an integer; in other words, it is the product of some integer with itself. For example, 1, 4, 9, and 16 are perfect squares while 3 and 11 are not.

// Constraints:

// 1 <= n <= 10^4

func bruteForce() {
	squares := []int{0}

	const genUpTo = 10000
	for len(squares) <= genUpTo {
		currMax := len(squares)
		perfectSquares := math.MaxInt32

		for i := 1; i*i <= currMax; i++ {
			perfectSquares = min(perfectSquares, squares[currMax-i*i]+1)
		}

		squares = append(squares, perfectSquares)
	}

	//maxSquares := -1
	//for i := 1; i <= genUpTo; i++ {
	//	maxSquares = max(maxSquares, squares[i])
	//}
	//fmt.Println(maxSquares) // 4

	byteSlice := make([]byte, (genUpTo+3)/4)
	for i := 1; i <= genUpTo; i += 4 {
		var fourSquares byte

		sq1 := squares[i] - 1
		sq2 := squares[i+1] - 1
		sq3 := squares[i+2] - 1
		sq4 := squares[i+3] - 1

		fourSquares = byte(sq1<<6 | sq2<<4 | sq3<<2 | sq4)
		byteSlice[i/4] = fourSquares
	}

	//answerStr := "answer := []byte{"
	//for _, b := range byteSlice {
	//	answerStr += fmt.Sprintf("0x%02X, ", b)
	//}
	//answerStr += "}"
	//fmt.Println(answerStr)
}

func numSquares(n int) int {
	// Forgive me daddy for I have sinned. Have I?
	answer := []byte{
		0x18, 0x6D, 0x1A, 0x6C, 0x59, 0xAE, 0x1B, 0x6D, 0x98, 0x6D, 0x6A, 0x6E, 0x19, 0x6E, 0x9B, 0x6C, 0x69, 0xAD,
		0x5A, 0xAD, 0x1A, 0x6E, 0x5B, 0xAE, 0x58, 0x6D, 0x9A, 0x6F, 0x69, 0x6E, 0x1B, 0x6D, 0x9A, 0xAD, 0x6A, 0xAC,
		0x59, 0x6E, 0x6B, 0x6D, 0x99, 0xAE, 0x1A, 0x6E, 0x99, 0x6E, 0x6B, 0xAE, 0x58, 0x6D, 0x9A, 0x6D, 0xA9, 0xAE,
		0x9B, 0x6E, 0x1A, 0x6D, 0x5A, 0xAF, 0x59, 0x6E, 0x9B, 0xAC, 0x69, 0x6E, 0x6A, 0x6D, 0x9A, 0x6E, 0x6B, 0xAD,
		0x19, 0x6D, 0x9A, 0xAE, 0x5A, 0xAE, 0x5B, 0x6D, 0xA8, 0x6D, 0xAA, 0x6E, 0x59, 0xAE, 0x9B, 0x6E, 0x69, 0xAD,
		0x1A, 0x6F, 0x5A, 0x6E, 0x6B, 0xAE, 0x99, 0x6D, 0x9A, 0x6C, 0x69, 0x6E, 0x5B, 0xAD, 0xAA, 0x6D, 0x6A, 0xAE,
		0x69, 0xAE, 0x1B, 0x6F, 0x59, 0xAE, 0x5A, 0x6D, 0x99, 0xAE, 0xAB, 0x6E, 0x58, 0x6D, 0x9A, 0x6F, 0xA9, 0xAE,
		0x6B, 0x6D, 0x9A, 0xAD, 0x5A, 0xAE, 0x1A, 0x6E, 0x9B, 0x6D, 0x69, 0x6E, 0x9A, 0x6E, 0x9A, 0x6E, 0x6B, 0xAC,
		0x59, 0xAD, 0x5A, 0xAD, 0x69, 0xAE, 0x6B, 0x6E, 0x99, 0x6E, 0x6A, 0xAF, 0x19, 0x6E, 0x9B, 0x6D, 0x6A, 0xAD,
		0x9A, 0x6D, 0x6A, 0x6E, 0x9B, 0xAE, 0x58, 0x6D, 0xAA, 0x6E, 0x69, 0xAE, 0x5B, 0x6E, 0x9A, 0x6D, 0xAA, 0xAD,
		0x99, 0x6E, 0x1B, 0x6E, 0x99, 0xAE, 0x5A, 0xAF, 0x9A, 0x6E, 0x6B, 0x6E, 0x69, 0x6D, 0x9A, 0xAC, 0x69, 0xAE,
		0x5B, 0x6D, 0x5A, 0xAD, 0x5A, 0xAE, 0x99, 0x6E, 0xAB, 0x6D, 0x6A, 0xAE, 0x1A, 0x6D, 0x9A, 0x6E, 0x6B, 0xAE,
		0x5A, 0xAD, 0x6A, 0x6F, 0x59, 0xAE, 0x9B, 0xAE, 0x98, 0x6D, 0x6A, 0x6E, 0x99, 0xAE, 0x9B, 0x6D, 0x69, 0xAD,
		0x6A, 0x6E, 0xAA, 0x6E, 0x5B, 0xAF, 0x19, 0x6D, 0x9A, 0xAD, 0x69, 0x6E, 0x5B, 0xAE, 0xAA, 0x6D, 0xAA, 0xAF,
		0x5A, 0x6E, 0x5B, 0x6C, 0x69, 0xAE, 0x6A, 0x6D, 0x99, 0xAE, 0x6B, 0x6E, 0x99, 0x6E, 0x9A, 0x6E, 0x69, 0xAE,
		0x9B, 0xAD, 0x1A, 0x6D, 0x5A, 0xAE, 0x69, 0x6E, 0x9B, 0x6E, 0xA9, 0x6E, 0x5A, 0xAF, 0x9A, 0xAE, 0x6B, 0xAD,
		0x58, 0x6D, 0xAA, 0x6D, 0x99, 0xAE, 0xAB, 0x6D, 0x9A, 0x6D, 0x6A, 0xAE, 0x5A, 0x6E, 0x9B, 0x6E, 0x69, 0xAD,
		0x1A, 0x6E, 0x5A, 0x6E, 0x6B, 0xAE, 0x59, 0xAD, 0x9A, 0x6F, 0xA9, 0xAE, 0x9B, 0x6D, 0x9A, 0x6E, 0x6A, 0xAC,
		0x69, 0x6E, 0x5B, 0xAD, 0x5A, 0xAE, 0x5A, 0x6E, 0xA9, 0xAE, 0xAB, 0x6E, 0x59, 0xAD, 0x9A, 0xAD, 0x6A, 0xAE,
		0x1B, 0x6E, 0x5A, 0x6D, 0x6A, 0xAF, 0x99, 0xAE, 0x9B, 0x6E, 0x69, 0x6E, 0x5A, 0x6D, 0xAA, 0x6E, 0x6B, 0xAD,
		0xA8, 0x6D, 0x9A, 0x6E, 0x99, 0xAE, 0x5B, 0x6F, 0xA9, 0xAD, 0x6A, 0xAE, 0x59, 0x6E, 0xAB, 0xAE, 0xA9, 0xAE,
		0x5A, 0x6F, 0x1A, 0x6E, 0x9B, 0xAE, 0x5A, 0xAD, 0x9A, 0x6D, 0x69, 0x6E, 0xAB, 0x6D, 0x9A, 0x6D, 0xAA, 0xAE,
		0x59, 0xAE, 0x9B, 0x6C, 0x59, 0xAE, 0x6A, 0x6D, 0x99, 0x6E, 0x6B, 0x6E, 0xA9, 0x6D, 0x9A, 0xAF, 0x6A, 0xAE,
		0x5B, 0xAD, 0x5A, 0x6E, 0xAA, 0xAE, 0x19, 0x6E, 0x9B, 0x6D, 0x69, 0xAE, 0x9A, 0x6E, 0x9A, 0x6E, 0x6B, 0xAE,
		0x99, 0x6E, 0x6A, 0x6D, 0x5A, 0xAE, 0x5B, 0xAE, 0x98, 0x6D, 0x6A, 0x6F, 0x69, 0x6E, 0xAB, 0x6F, 0xA9, 0xAD,
		0x5A, 0x6D, 0x9A, 0x6E, 0x9B, 0xAE, 0x69, 0xAD, 0xAA, 0xAE, 0xA9, 0x6E, 0x1B, 0x6D, 0x9A, 0x6D, 0x6A, 0xAD,
		0x5A, 0x6E, 0x9B, 0x6E, 0x6A, 0xAE, 0x9A, 0x6F, 0x99, 0xAE, 0x6B, 0xAE, 0x59, 0xAD, 0x9A, 0x6C, 0x69, 0xAE,
		0x6B, 0x6D, 0x9A, 0xAD, 0x5A, 0xAE, 0x99, 0x6E, 0xAB, 0xAF, 0x6A, 0x6E, 0x5A, 0x6D, 0xAA, 0x6E, 0x6B, 0xAE,
		0x59, 0xAE, 0x1A, 0x6F, 0x99, 0xAE, 0x5B, 0x6D, 0x9A, 0x6D, 0x6A, 0x6E, 0x9A, 0x6E, 0x9B, 0xAD, 0x69, 0xAD,
		0x6A, 0xAE, 0x5A, 0xAE, 0x5B, 0xAE, 0x68, 0x6D, 0x9A, 0x6E, 0x69, 0xAE, 0x5B, 0x6E, 0x9A, 0xAD, 0x6A, 0xAF,
		0x69, 0x6E, 0x6B, 0x6D, 0x99, 0xAE, 0x9A, 0xAD, 0x99, 0x6E, 0xAB, 0x6E, 0x1A, 0x6D, 0x9A, 0x6E, 0x69, 0xAE,
		0x9B, 0x6E, 0xAA, 0x6D, 0x5A, 0xAE, 0x59, 0xAE, 0xAB, 0x6E, 0x69, 0xAE, 0x6A, 0x6F, 0x9A, 0x6E, 0x6B, 0xAC,
		0x59, 0x6D, 0x5A, 0xAD, 0xAA, 0xAE, 0x5B, 0x6D, 0xA9, 0x6D, 0xAA, 0x6E, 0x6A, 0x6E, 0x9B, 0xAD, 0xA9, 0xAE,
		0x5A, 0x6D, 0x5A, 0x6E, 0x6B, 0xAE, 0x19, 0x6E, 0x9A, 0xAF, 0x69, 0x6E, 0x5B, 0xAE, 0x9A, 0x6D, 0x6A, 0xAD,
		0x99, 0xAE, 0x9B, 0xAE, 0x59, 0xAE, 0x5A, 0x6E, 0x9A, 0xAE, 0xAB, 0x6F, 0x98, 0x6D, 0xAA, 0x6D, 0xA9, 0xAE,
		0x5B, 0x6E, 0x6A, 0x6D, 0xAA, 0xAF, 0x69, 0x6E, 0x9B, 0x6D, 0x69, 0xAE, 0x9A, 0xAE, 0x9A, 0x6E, 0xAB, 0xAD,
		0x5A, 0x6D, 0x1A, 0x6E, 0x59, 0xAE, 0x6B, 0x6D, 0x99, 0xAE, 0x6A, 0x6E, 0x99, 0x6E, 0x9B, 0xAE, 0x6A, 0xAD,
		0x6A, 0x6F, 0xAA, 0x6E, 0x9B, 0xAE, 0x59, 0x6D, 0xAA, 0x6C, 0x69, 0xAE, 0x6B, 0xAD, 0x9A, 0x6E, 0x6A, 0xAE,
		0x99, 0x6E, 0x5B, 0x6E, 0x59, 0xAE, 0x9A, 0xAD, 0x9A, 0xAE, 0x6B, 0xAE, 0x69, 0x6D, 0xAA, 0x6F, 0x69, 0xAE,
		0x1B, 0x6E, 0x5A, 0xAD, 0x5A, 0xAE, 0x59, 0x6E, 0x9B, 0x6D, 0xAA, 0x6E, 0x5A, 0x6E, 0x9A, 0xAE, 0x6B, 0xAD,
		0xAA, 0x6D, 0x9A, 0xAD, 0x69, 0xAE, 0x9B, 0x6E, 0xA8, 0x6D, 0xAA, 0x6F, 0x59, 0xAE, 0x9B, 0x6E, 0xAA, 0xAD,
		0x6A, 0x6D, 0x9A, 0x6E, 0x6B, 0xAE, 0x59, 0xAD, 0x9A, 0x6E, 0x6A, 0x6E, 0x6B, 0x6F, 0xAA, 0xAD, 0xAA, 0xAE,
		0x19, 0x6E, 0x5B, 0x6E, 0x59, 0xAE, 0x5A, 0xAF, 0xA9, 0x6E, 0x6B, 0xAE, 0x99, 0x6E, 0xAA, 0x6D, 0x69, 0xAE,
		0x9B, 0xAD, 0x9A, 0x6D, 0x9A, 0xAE, 0x6A, 0x6E, 0x9B, 0x6C, 0x69, 0x6E, 0x5A, 0xAD, 0xAA, 0xAE, 0x6B, 0xAE,
		0x59, 0xAD, 0x6A, 0x6F, 0x69, 0xAE, 0x9B, 0xAD, 0x99, 0x6D, 0x6A, 0xAE, 0x5A, 0x6E, 0x9B, 0x6D, 0x69, 0xAD,
		0x9A, 0xAE, 0x1A, 0x6E, 0x5B, 0xAE, 0x6A, 0xAD, 0x9A, 0x6D, 0x69, 0x6E, 0xAB, 0x6E, 0x9A, 0x6E, 0x6A, 0xAF,
		0x59, 0xAE, 0x6B, 0xAD, 0x59, 0xAE, 0x9A, 0x6E, 0xAA, 0x6E, 0xAB, 0x6E, 0x58, 0x6D, 0x9A, 0x6E, 0xA9, 0xAE,
		0x5B, 0x6D, 0x5A, 0xAD, 0xAA, 0xAE, 0xA9, 0x6E, 0x9B, 0xAE, 0x69, 0xAE, 0x5A, 0xAF, 0x9A, 0x6E, 0x6B, 0xAE,
		0x69, 0x6D, 0x9A, 0x6E, 0x9A, 0xAE, 0x1B, 0x6D, 0x99, 0xAE, 0x6A, 0x6E, 0x59, 0x6E, 0xAB, 0x6F, 0xA9, 0xAD,
		0x5A, 0x6D, 0x9A, 0x6E, 0x5B, 0xAE, 0x9A, 0x6D, 0x9A, 0xAF, 0xAA, 0x6E, 0x5B, 0x6E, 0xAA, 0x6D, 0x6A, 0xAC,
		0x59, 0xAE, 0x5B, 0x6D, 0x69, 0xAE, 0x5A, 0xAE, 0xA9, 0x6E, 0xAB, 0x6E, 0x5A, 0x6D, 0xAA, 0xAD, 0x6A, 0xAE,
		0x6B, 0x6E, 0x6A, 0xAD, 0x9A, 0xAF, 0x59, 0x6E, 0x9B, 0x6D, 0xA9, 0xAE, 0x1A, 0x6D, 0x9A, 0x6E, 0x6B, 0xAD,
		0x99, 0xAE, 0x9A, 0x6E, 0x69, 0xAE, 0x5B, 0xAE, 0x9A, 0xAE, 0x6A, 0x6E, 0x69, 0x6E, 0x9B, 0x6E, 0x69, 0xAD,
		0xAA, 0x6F, 0x5A, 0xAE, 0x6B, 0xAF, 0x98, 0x6D, 0xAA, 0x6D, 0xA9, 0xAE, 0x5B, 0x6D, 0x9A, 0x6D, 0x6A, 0xAE,
		0x5A, 0x6E, 0x5B, 0xAD, 0xA9, 0xAE, 0xAA, 0x6D, 0x99, 0x6E, 0x6B, 0xAE, 0xA9, 0xAD, 0x9A, 0xAF, 0xAA, 0xAE,
		0x6B, 0x6E, 0x1A, 0x6E, 0x5A, 0xAE, 0x59, 0x6E, 0x9B, 0xAD, 0x6A, 0x6E, 0x9A, 0x6E, 0x9A, 0x6E, 0xAB, 0xAF,
		0x59, 0xAD, 0x6A, 0x6E, 0x59, 0xAE, 0x5B, 0xAE, 0xA9, 0x6D, 0x6A, 0xAF, 0x99, 0xAE, 0x9B, 0x6C, 0x69, 0xAE,
		0x5A, 0xAD, 0x5A, 0xAE, 0x5B, 0xAE, 0x69, 0x6E, 0x9A, 0x6E, 0x69, 0x6E, 0x6B, 0x6D, 0x9A, 0x6D, 0xAA, 0xAD,
		0x5A, 0x6E, 0xAB, 0xAE, 0x99, 0xAE, 0x6A, 0x6F, 0x99, 0xAE, 0x6B, 0xAE, 0x1A, 0x6D, 0x9A, 0xAD, 0x69, 0xAE,
		0x9B, 0x6E, 0x9A, 0x6D, 0x6A, 0xAE, 0x59, 0xAE, 0x9B, 0x6E, 0x69, 0x6E, 0x6A, 0xAD, 0x9A, 0xAE, 0xAB, 0xAE,
		0x5A, 0x6D, 0x5A, 0xAF, 0x5A, 0xAE, 0x9B, 0x6D, 0xA8, 0x6D, 0x6A, 0x6E, 0x69, 0x6E, 0xAB, 0x6D, 0x69, 0xAD,
		0x9A, 0x6E, 0xAA, 0x6E, 0x5B, 0xAE, 0x99, 0x6E, 0x9A, 0xAD, 0xA9, 0x6E, 0x5B, 0xAE, 0x9A, 0x6D, 0x6A, 0xAF,
		0xA9, 0x6E, 0x9B, 0x6E, 0x6A, 0xAE, 0x1A, 0x6D, 0x99, 0xAE, 0x6B, 0xAE, 0x59, 0x6D, 0xAA, 0x6E, 0xAA, 0xAE,
		0x5B, 0xAF, 0x5A, 0x6D, 0x6A, 0xAE, 0x5A, 0xAE, 0x9B, 0x6E, 0xA9, 0x6E, 0x9A, 0x6F, 0x9A, 0x6E, 0xAB, 0xAD,
		0x99, 0xAD, 0x9A, 0x6C, 0x59, 0xAE, 0x6B, 0x6D, 0xAA, 0x6E, 0x6A, 0xAE, 0x59, 0xAE, 0x9B, 0xAD, 0x6A, 0xAD,
		0x9A, 0x6D, 0x6A, 0x6E, 0x9B, 0xAE, 0x5A, 0x6E, 0x9A, 0x6F, 0x69, 0xAE, 0x6B, 0x6D, 0xAA, 0xAD, 0x6A, 0xAE,
		0x59, 0xAE, 0x1B, 0x6D, 0x99, 0xAE, 0x5A, 0xAE, 0x9A, 0x6E, 0x6B, 0x6E, 0x59, 0x6D, 0x9A, 0x6E, 0x69, 0xAE,
		0x6B, 0xAE, 0x9A, 0xAD, 0x9A, 0xAF, 0x59, 0xAE, 0xAB, 0x6E, 0xA9, 0x6E, 0x9A, 0x6D, 0x9A, 0x6E, 0x6B, 0xAD,
		0xA8, 0x6D, 0x6A, 0x6E, 0x69, 0xAE, 0xAB, 0x6E, 0x99, 0x6D, 0x6A, 0x6E, 0x99, 0x6E, 0x9B, 0x6E, 0x69, 0xAE,
		0x6A, 0x6F, 0xAA, 0x6E, 0x5B, 0xAE, 0x69, 0xAD, 0x9A, 0xAD, 0x6A, 0x6E, 0x5B, 0x6D, 0xAA, 0xAD, 0xAA, 0xAE,
		0x19, 0x6E, 0x9B, 0xAF, 0x5A, 0xAE, 0x5A, 0x6D, 0xAA, 0x6E, 0x6B, 0x6E, 0x9A, 0xAD, 0x9A, 0x6F, 0x69, 0xAE,
		0x5B, 0xAD, 0x5A, 0x6D, 0xAA, 0xAE, 0xA9, 0x6E, 0xAB, 0xAE, 0x69, 0xAE, 0x5A, 0x6E, 0xAA, 0xAE, 0xAB, 0xAC,
		0x59, 0x6E, 0x5A, 0x6D, 0x99, 0xAE, 0x5B, 0x6E, 0x99, 0xAD, 0xAA, 0xAF, 0x5A, 0x6E, 0x9B, 0x6D, 0x69, 0xAD,
		0xAA, 0x6E, 0x5A, 0xAE, 0x5B, 0xAE, 0x69, 0xAD, 0x9A, 0xAE, 0x69, 0xAE, 0x6B, 0x6E, 0x9A, 0x6E, 0x6A, 0xAD,
		0x1A, 0x6E, 0x5B, 0x6E, 0x6A, 0xAE, 0x5A, 0xAF, 0xA9, 0x6E, 0xAB, 0xAE, 0x99, 0x6D, 0x9A, 0x6D, 0x6A, 0xAE,
		0x9B, 0xAD, 0x5A, 0x6D, 0x6A, 0xAE, 0x9A, 0x6E, 0xAB, 0x6D, 0x69, 0x6E, 0x5A, 0xAE, 0x9A, 0xAE, 0x6B, 0xAE,
		0x68, 0x6D, 0x9A, 0x6F, 0x99, 0xAE, 0x9B, 0x6E, 0x99, 0xAD, 0x6A, 0x6E, 0x69, 0x6E, 0xAB, 0xAD, 0x69, 0xAE,
		0x6A, 0xAE, 0x5A, 0x6E, 0xAB, 0xAF, 0x5A, 0x6D, 0x9A, 0x6D, 0x6A, 0xAE, 0x9B, 0x6E, 0x9A, 0xAD, 0xAA, 0xAF,
		0x59, 0xAE, 0x1B, 0x6E, 0x99, 0xAE, 0x6A, 0x6D, 0x99, 0x6E, 0x6B, 0x6E, 0x99, 0x6D, 0x9A, 0xAE, 0xA9, 0xAE,
		0x5B, 0x6D, 0xAA, 0x6E, 0x9A, 0xAE, 0x59, 0x6E, 0x9B, 0x6E, 0x69, 0x6E, 0x6A, 0x6F, 0x9A, 0x6E, 0xAB, 0xAD,
		0xAA, 0x6E, 0x5A, 0xAC, 0x69, 0xAE, 0x6B, 0xAD, 0x9A, 0xAD, 0x6A, 0xAE, 0x69, 0x6E, 0x9B, 0x6E, 0x6A, 0xAD,
		0x9A, 0x6D, 0xAA, 0xAE, 0x5B, 0xAE, 0x59, 0x6D, 0xAA, 0x6F, 0xA9, 0x6E, 0x5B, 0xAF, 0xAA, 0xAE, 0x6A, 0xAD,
		0x5A, 0xAE, 0x5B, 0x6D, 0xA9, 0xAE, 0x1A, 0x6E, 0x9A, 0x6E, 0x6B, 0x6E, 0x59, 0xAD, 0xAA, 0x6D, 0xA9, 0xAE,
		0x9B, 0x6E, 0x9A, 0x6E, 0x5A, 0xAF, 0x5A, 0x6E, 0x9B, 0xAE, 0xAA, 0xAE, 0x6A, 0x6D, 0xAA, 0x6E, 0xAB, 0xAE,
		0x99, 0x6D, 0x5A, 0xAE, 0x59, 0xAE, 0x5B, 0xAF, 0x98, 0x6D, 0x6A, 0x6E, 0x99, 0x6E, 0xAB, 0x6E, 0x6A, 0xAD,
		0x5A, 0x6F, 0x9A, 0x6E, 0x6B, 0xAE, 0x69, 0xAD, 0x9A, 0xAE, 0x6A, 0x6E, 0x9B, 0x6D, 0x9A, 0xAD, 0x6A, 0xAE,
		0xA9, 0x6E, 0x6B, 0x6D, 0xA9, 0xAE, 0x5A, 0x6D, 0xA9, 0x6E, 0xAB, 0xAE, 0x1A, 0x6E, 0x9A, 0x6F, 0x69, 0xAE,
		0x9B, 0x6D, 0x5A, 0x6D, 0x9A, 0xAE, 0x99, 0xAE, 0xAB, 0x6D, 0x6A, 0x6E, 0xAA, 0x6E, 0x9A, 0xAE, 0x6B, 0xAE,
		0x59, 0x6D, 0xAA, 0xAD, 0x5A, 0xAE, 0x5B, 0xAE, 0x9A, 0x6D, 0xAA, 0x6F, 0x69, 0x6E, 0xAB, 0x6C, 0x69, 0xAD,
		0x5A, 0x6D, 0x9A, 0x6E, 0x6B, 0xAE, 0x99, 0x6E, 0x9A, 0x6E, 0x69, 0xAE, 0x9B, 0xAD, 0x9A, 0x6D, 0x6A, 0xAD,
		0x69, 0x6E, 0xAB, 0xAE, 0x59, 0xAE, 0x5A, 0xAF, 0x99, 0xAE, 0x6B, 0x6E, 0x5A, 0xAE, 0xAA, 0xAD, 0xA9, 0xAE,
		0x5B, 0xAD, 0x1A, 0x6D, 0x5A, 0xAE, 0x6A, 0x6E, 0x9B, 0xAF, 0xA9, 0x6E, 0x9A, 0x6E, 0x9A, 0x6E, 0x6B, 0xAE,
		0x59, 0xAD, 0xAA, 0x6F, 0x5A, 0xAE, 0x6B, 0x6D, 0x99, 0x6D, 0xAA, 0xAE, 0x69, 0xAE, 0x9B, 0xAE, 0x6A, 0xAE,
		0x5A, 0x6E, 0x6A, 0x6E, 0x5B, 0xAE, 0x98, 0x6D, 0x9A, 0x6D, 0x69, 0xAE, 0x9B, 0x6E, 0xAA, 0x6D, 0x6A, 0xAF,
		0x99, 0x6E, 0x9B, 0x6D, 0x99, 0xAE, 0x6A, 0xAD, 0xAA, 0x6E, 0xAB, 0x6E, 0x6A, 0xAD, 0x9A, 0x6E, 0x69, 0xAE,
		0x6B, 0x6E, 0x5A, 0xAD, 0x6A, 0xAE, 0x59, 0x6E, 0xAB, 0x6E, 0xA9, 0x6E, 0x1A, 0x6F, 0x9A, 0xAE, 0x6B, 0xAE,
		0x9A, 0x6D, 0x5A, 0x6D, 0x69, 0xAE, 0x9B, 0xAE, 0xA9, 0x6E, 0x6A, 0x6E, 0x59, 0xAE, 0x9B, 0xAD, 0x69, 0xAD,
		0xAA, 0x6E, 0x9A, 0x6E, 0x5B, 0xAE, 0x99, 0x6D, 0x9A, 0xAF, 0x6A, 0xAE, 0x5B, 0xAE, 0xAA, 0x6D, 0xAA, 0xAC,
		0x59, 0xAE, 0x5B, 0x6D, 0xA9, 0xAE, 0x5A, 0x6E, 0x99, 0x6E, 0xAB, 0xAF, 0x69, 0x6E, 0x9A, 0xAD, 0x69, 0xAE,
		0x6B, 0xAE, 0x6A, 0x6E, 0x5A, 0xAF, 0x99, 0x6E, 0x9B, 0x6F, 0xAA, 0x6E, 0x5A, 0xAD, 0x9A, 0xAE, 0x6B, 0xAD,
		0x99, 0xAD, 0x6A, 0x6E, 0x99, 0xAE, 0x1B, 0x6D, 0x9A, 0x6D, 0x6A, 0xAE, 0x99, 0x6E, 0xAB, 0x6E, 0x6A, 0xAD,
		0x9A, 0xAF, 0x6A, 0xAE, 0x5B, 0xAE, 0x59, 0x6E, 0x9A, 0x6D, 0xAA, 0xAE, 0x6B, 0x6D, 0x9A, 0x6E, 0xAA, 0xAE,
		0x5A, 0x6E, 0x9B, 0xAE, 0x5A, 0xAE, 0x6A, 0x6D, 0xA9, 0x6E, 0xAB, 0x6E, 0x58, 0x6D, 0x9A, 0x6F, 0xA9, 0xAE,
		0x5B, 0x6D, 0xAA, 0xAD, 0x6A, 0xAE, 0x99, 0x6E, 0x9B, 0x6D, 0x69, 0x6E, 0x5A, 0xAE, 0x9A, 0x6E, 0x6B, 0xAD,
		0x69, 0xAD, 0x6A, 0x6E, 0xA9, 0xAE, 0x9B, 0x6E, 0x9A, 0xAD, 0x6A, 0xAF, 0x59, 0x6E, 0xAB, 0x6E, 0xA9, 0xAE,
		0x6A, 0x6E, 0x1A, 0x6E, 0x5B, 0xAE, 0x5A, 0x6D, 0x9A, 0xAE, 0xA9, 0x6E, 0x9B, 0xAF, 0x9A, 0x6D, 0x6A, 0xAD,
		0x6A, 0xAE, 0x9B, 0xAE, 0x59, 0xAE, 0xAA, 0xAF, 0x9A, 0x6E, 0x6B, 0x6E, 0x69, 0x6D, 0x9A, 0x6D, 0xAA, 0xAE,
		0x9B, 0x6D, 0x6A, 0x6D, 0xAA, 0xAE, 0x99, 0xAE, 0x9B, 0x6C, 0x69, 0xAE, 0x5A, 0x6D, 0x9A, 0x6E, 0x6B, 0xAE,
		0x99, 0xAE, 0x5A, 0x6F, 0x59, 0xAE, 0x6B, 0xAD, 0xAA, 0x6D, 0x6A, 0xAE, 0x6A, 0x6E, 0x9B, 0x6D, 0x69, 0xAD,
		0x9A, 0x6E, 0x5A, 0xAE, 0x6B, 0xAE, 0x6A, 0x6D, 0xAA, 0xAD, 0xA9, 0x6E, 0x6B, 0x6E, 0xAA, 0xAE, 0x6A, 0xAF,
		0x1A, 0x6E, 0x5B, 0x6F, 0x59, 0xAE, 0x9A, 0x6E, 0x99, 0x6E, 0xAB, 0xAE, 0x59, 0xAD, 0x9A, 0xAE, 0x69, 0xAE,
		0x6B, 0xAD, 0x9A, 0x6E, 0x5A, 0xAE, 0x69, 0x6E, 0x9B, 0xAE, 0x69, 0xAE, 0x9A, 0x6F, 0xAA, 0x6E, 0xAB, 0xAE,
		0x59, 0x6D, 0xAA, 0x6D, 0x5A, 0xAE, 0x5B, 0x6E, 0x98, 0x6D, 0x6A, 0x6E, 0x99, 0x6E, 0xAB, 0x6F, 0xAA, 0xAD,
		0x9A, 0xAD, 0x5A, 0x6E, 0xAB, 0xAE, 0x69, 0xAD, 0xAA, 0xAF, 0x69, 0x6E, 0x5B, 0xAD, 0x9A, 0xAD, 0xAA, 0xAE,
		0x59, 0xAE, 0xAB, 0x6D, 0x99, 0xAE, 0x6A, 0x6E, 0x99, 0x6E, 0x6B, 0xAE, 0x9A, 0xAD, 0x9A, 0x6E, 0x69, 0xAE,
		0x1B, 0x6E, 0x9A, 0x6D, 0x5A, 0xAF, 0x9A, 0xAE, 0x9B, 0x6D, 0x69, 0x6E, 0x5A, 0x6D, 0xAA, 0xAE, 0x6B, 0xAD,
		0x59, 0x6E, 0x5A, 0xAE, 0x6A, 0xAE, 0x6B, 0x6E, 0xA9, 0x6D, 0xAA, 0xAE, 0x9A, 0x6E, 0x9B, 0xAE, 0xA9, 0xAD,
		0x6A, 0x6F, 0x5A, 0xAE, 0xAB, 0xAE, 0x99, 0xAE, 0x9A, 0x6C, 0x69, 0x6E, 0x6B, 0x6D, 0x9A, 0x6D, 0x6A, 0xAE,
		0x69, 0x6E, 0x9B, 0xAE, 0x69, 0xAE, 0x5A, 0xAD, 0x9A, 0xAE, 0x6B, 0x6E, 0x59, 0xAD, 0xAA, 0xAF, 0xA9, 0xAE,
		0x9B, 0x6E, 0x5A, 0x6D, 0x5A, 0xAE, 0x5A, 0x6E, 0xAB, 0x6D, 0x69, 0xAE, 0xAA, 0x6E, 0xAA, 0x6E, 0x6B, 0xAF,
		0x59, 0xAE, 0x1A, 0x6D, 0x99, 0xAE, 0x6B, 0x6E, 0x99, 0x6E, 0x6A, 0x6F, 0x69, 0x6E, 0x9B, 0xAD, 0x6A, 0xAD,
		0x5A, 0xAD, 0x9A, 0x6E, 0x9B, 0xAE, 0x5A, 0x6D, 0x9A, 0x6E, 0x6A, 0xAE, 0x5B, 0x6D, 0x9A, 0xAD, 0xAA, 0xAD,
		0xA9, 0xAE, 0x5B, 0xAE, 0x6A, 0xAE, 0x9A, 0xAF, 0x99, 0x6E, 0x6B, 0x6E, 0x68, 0x6D, 0x9A, 0x6E, 0x69, 0xAE,
		0x6B, 0x6D, 0x6A, 0x6D, 0x9A, 0xAE, 0x99, 0x6E, 0xAB, 0x6E, 0xA9, 0xAE, 0x5A, 0xAD, 0x9A, 0x6E, 0xAB, 0xAE,
		0x6A, 0x6D, 0x9A, 0x6F, 0x69, 0xAE, 0x9B, 0x6E, 0x9A, 0xAE, 0x6A, 0x6E, 0x99, 0xAE, 0x9B, 0x6D, 0x69, 0xAD,
		0x6A, 0x6E, 0x9A, 0x6E, 0xAB, 0xAE, 0x19, 0x6D, 0x9A, 0xAD, 0x6A, 0xAE, 0x5B, 0xAE, 0xAA, 0x6E, 0x6A, 0xAF,
		0x99, 0x6E, 0x6B, 0xAE, 0x59, 0xAE, 0x9A, 0xAD, 0x9A, 0x6E, 0x6B, 0x6E, 0x99, 0x6E, 0xAA, 0x6E, 0x69, 0xAE,
		0x9B, 0xAF, 0x6A, 0x6D, 0x5A, 0xAE, 0x69, 0x6E, 0x9B, 0x6E, 0xA9, 0x6E, 0x5A, 0x6F, 0xAA, 0xAE, 0x6B, 0xAC,
		0x69, 0x6D, 0x6A, 0xAD, 0xA9, 0xAE, 0x5B, 0x6D, 0x99, 0xAD, 0x6A, 0xAE, 0x5A, 0xAE, 0x9B, 0x6D, 0x6A, 0xAE,
		0x9A, 0x6E, 0x5A, 0xAE, 0x6B, 0xAE, 0x99, 0xAD, 0xAA, 0x6F, 0xA9, 0x6E, 0x6B, 0x6D, 0x9A, 0x6E, 0xAA, 0xAD,
		0xA9, 0x6E, 0x9B, 0xAD, 0x5A, 0xAE, 0x5A, 0x6E, 0xA9, 0x6E, 0xAB, 0xAE, 0x19, 0x6E, 0x9A, 0x6E, 0x69, 0xAE,
		0x5B, 0x6E, 0x5A, 0x6D, 0xAA, 0xAF, 0x5A, 0x6E, 0x9B, 0x6D, 0x6A, 0x6E, 0xAA, 0xAD, 0x9A, 0xAE, 0x6B, 0xAE,
		0x59, 0x6D, 0xAA, 0xAE, 0x59, 0xAE, 0x5B, 0x6D, 0xA9, 0xAD, 0xAA, 0x6E, 0x59, 0xAE, 0xAB, 0x6E, 0xA9, 0xAE,
		0x5A, 0xAF, 0x9A, 0xAE, 0x5B, 0xAE, 0x58, 0x6D, 0x9A, 0x6D, 0xA9, 0x6E, 0x9B, 0x6E, 0x9A, 0xAD, 0xAA, 0xAE,
		0x5A, 0x6E, 0x6B, 0x6F, 0x69, 0xAE, 0x6A, 0x6D, 0xA9, 0x6E, 0x6B, 0xAE, 0x59, 0x6D, 0xAA, 0xAF, 0xAA, 0xAE,
		0x5B, 0x6E, 0xAA, 0x6D, 0x9A, 0xAE, 0x69, 0x6E, 0x9B, 0xAD, 0xA9, 0xAE, 0x5A, 0x6E, 0x9A, 0x6E, 0xAB, 0xAD,
		0xAA, 0x6D, 0x1A, 0x6D, 0x5A, 0xAE, 0x5B, 0xAE, 0x9A, 0x6D, 0x6A, 0x6F, 0x6A, 0xAE, 0x9B, 0xAE, 0x69, 0xAD,
		0x5A, 0xAD, 0x5A, 0xAE, 0x5B, 0xAE, 0xA9, 0x6D, 0x9A, 0x6E, 0xA9, 0xAE, 0x9B, 0xAE, 0x9A, 0x6D, 0x6A, 0xAE,
		0x9A, 0x6E, 0x5B, 0x6E, 0x6A, 0xAE, 0x9A, 0x6F, 0x99, 0x6E, 0xAB, 0x6F, 0x5A, 0xAD, 0xAA, 0x6C}

	packed := answer[(n-1)/4]
	shift := (4 - (n % 4)) % 4 * 2
	unpacked := (packed >> shift) & 0x3

	return int(unpacked) + 1
}

func main() {
	fmt.Println(numSquares(12))
	fmt.Println(numSquares(13))
}
